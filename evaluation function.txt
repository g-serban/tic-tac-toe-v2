 in the real world when we are creating a program to play Tic-Tac-Toe, Chess, Backgamon, etc. we need to implement a function that calculates the value of the board depending on the placement of pieces on the board.

The basic idea behind the evaluation function is to give a high value for a board if maximizer‘s turn or a low value for the board if minimizer‘s turn.

def evaluate(b): 
   
    # Checking for Rows for X or O victory. 
    for row in range(0, 3): 
       
        if b[row][0] == b[row][1] and b[row][1] == b[row][2]: 
           
            if b[row][0] == 'x':
                return 10 
            elif b[row][0] == 'o': 
                return -10 
  
    # Checking for Columns for X or O victory. 
    for col in range(0, 3): 
       
        if b[0][col] == b[1][col] and b[1][col] == b[2][col]: 
           
            if b[0][col]=='x':
                return 10 
            elif b[0][col] == 'o': 
                return -10 
  
    # Checking for Diagonals for X or O victory. 
    if b[0][0] == b[1][1] and b[1][1] == b[2][2]: 
       
        if b[0][0] == 'x': 
            return 10 
        elif b[0][0] == 'o': 
            return -10 
       
    if b[0][2] == b[1][1] and b[1][1] == b[2][0]: 
       
        if b[0][2] == 'x': 
            return 10 
        elif b[0][2] == 'o': 
            return -10 
       
    # Else if none of them have won then return 0 
    return 0 
   
# Driver code 
if __name__ == "__main__": 
   
    board = [['x', '_', 'o'], 
             ['_', 'x', 'o'], 
             ['_', '_', 'x']] 
       
    value = evaluate(board) 
    print("The value of this board is", value) 